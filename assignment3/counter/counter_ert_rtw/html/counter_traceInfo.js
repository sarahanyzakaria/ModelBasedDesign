function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "counter"};
	this.sidHashMap["counter"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "counter:39"};
	this.sidHashMap["counter:39"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "counter:36"};
	this.sidHashMap["counter:36"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<Root>/Constant1"] = {sid: "counter:34"};
	this.sidHashMap["counter:34"] = {rtwname: "<Root>/Constant1"};
	this.rtwnameHashMap["<Root>/Scope"] = {sid: "counter:35"};
	this.sidHashMap["counter:35"] = {rtwname: "<Root>/Scope"};
	this.rtwnameHashMap["<Root>/down counter"] = {sid: "counter:39"};
	this.sidHashMap["counter:39"] = {rtwname: "<Root>/down counter"};
	this.rtwnameHashMap["<Root>/up counter"] = {sid: "counter:36"};
	this.sidHashMap["counter:36"] = {rtwname: "<Root>/up counter"};
	this.rtwnameHashMap["<S1>/In1"] = {sid: "counter:40"};
	this.sidHashMap["counter:40"] = {rtwname: "<S1>/In1"};
	this.rtwnameHashMap["<S1>/Constant"] = {sid: "counter:23"};
	this.sidHashMap["counter:23"] = {rtwname: "<S1>/Constant"};
	this.rtwnameHashMap["<S1>/Subtract"] = {sid: "counter:24"};
	this.sidHashMap["counter:24"] = {rtwname: "<S1>/Subtract"};
	this.rtwnameHashMap["<S1>/Switch"] = {sid: "counter:25"};
	this.sidHashMap["counter:25"] = {rtwname: "<S1>/Switch"};
	this.rtwnameHashMap["<S1>/Unit Delay"] = {sid: "counter:26"};
	this.sidHashMap["counter:26"] = {rtwname: "<S1>/Unit Delay"};
	this.rtwnameHashMap["<S1>/Out1"] = {sid: "counter:41"};
	this.sidHashMap["counter:41"] = {rtwname: "<S1>/Out1"};
	this.rtwnameHashMap["<S2>/In1"] = {sid: "counter:37"};
	this.sidHashMap["counter:37"] = {rtwname: "<S2>/In1"};
	this.rtwnameHashMap["<S2>/Add1"] = {sid: "counter:14"};
	this.sidHashMap["counter:14"] = {rtwname: "<S2>/Add1"};
	this.rtwnameHashMap["<S2>/Constant2"] = {sid: "counter:15"};
	this.sidHashMap["counter:15"] = {rtwname: "<S2>/Constant2"};
	this.rtwnameHashMap["<S2>/GreaterThanOrEqual"] = {sid: "counter:18"};
	this.sidHashMap["counter:18"] = {rtwname: "<S2>/GreaterThanOrEqual"};
	this.rtwnameHashMap["<S2>/Switch1"] = {sid: "counter:19"};
	this.sidHashMap["counter:19"] = {rtwname: "<S2>/Switch1"};
	this.rtwnameHashMap["<S2>/Unit Delay1"] = {sid: "counter:20"};
	this.sidHashMap["counter:20"] = {rtwname: "<S2>/Unit Delay1"};
	this.rtwnameHashMap["<S2>/Out1"] = {sid: "counter:38"};
	this.sidHashMap["counter:38"] = {rtwname: "<S2>/Out1"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
